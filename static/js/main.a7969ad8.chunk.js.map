{"version":3,"sources":["Header.js","Movie.js","Search.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","onClick","window","location","reload","text","Movie","movie","poster","Poster","useState","detail","setDetail","id","imdbID","type","e","fetch","then","resp","json","response","catch","message","console","log","src","alt","Title","width","height","Plot","Search","setMovies","searchValue","setSearchValue","onChange","getInputValue","target","value","placeholder","preventDefault","getSubmit","App","isLoaded","setIsLoaded","movies","setMovie","total","setTotal","pages","setPages","keyword","setKeyword","errorMessage","setErrorMessage","getMovies","term","page","jsonResponse","Math","ceil","totalResults","handleCardClicked","movieId","getMovie","useEffect","allCards","map","push","cardClicked","genCards","val","length","previousLabel","previousClassName","previousLinkClassName","nextLabel","nextLinkClassName","nextClassName","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","forcePage","containerClassName","pageClassName","pageLinkClassName","subContainerClassName","activeClassName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7969ad8.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = (props) => {\n\n  const refreshPage = ()=>{\n    window.location.reload();\n }\n  return (\n    <header className=\"App-header\">\n      <h2 onClick={refreshPage}>{props.text}</h2>\n    </header>\n  );\n};\n\nexport default Header;","import React, { useState } from \"react\";\n\nconst Movie = (movie) => {\n  const DEFAULT_PLACEHOLDER_IMAGE =\n  \"https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg\";\n\n\n  const poster =\n    movie.Poster === \"N/A\" ? DEFAULT_PLACEHOLDER_IMAGE : movie.Poster;\n\n    //console.log(movie)\n  const [detail, setDetail] = useState(false);\n  const MovieDetail = ({Title, Poster, imdbRating, Rated, Runtime, Genre, Plot}) => {\n    return (\n       <div>\n         {Plot}\n       </div>\n    )\n  }\n  \n   \n  const handleClick = (e) => {\n    //console.log(e.target.dataset.id);\n    // props.cardClicked(e.target.dataset.id);\n    fetch(`https://www.omdbapi.com/?i=${movie.imdbID}&apikey=d4f7bffb`)\n      .then(resp => resp)\n      .then(resp => resp.json())\n      .then(response => {\n          setDetail(response);\n      })\n      .catch(({message}) => {\n        \n      })\n      console.log(detail)\n    }\n\n  \n  return (\n    <div className=\"accordion-item\" >\n      <div className=\"accordion-header\" id={'heading'+movie.imdbID}>\n        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target={'#collapse'+movie.imdbID} aria-expanded=\"false\" aria-controls={'collapse'+movie.imdbID} onClick={handleClick} >\n          <img src={movie.Poster !== 'N/A' ? movie.Poster : poster} alt={movie.Title} data-id={movie.imdbID} width = \"70\" height = \"100\"/>\n          <div className=\"movie-title\">{movie.Title}</div>\n        </button>\n      </div>\n      <div id={'collapse'+movie.imdbID} className=\"accordion-collapse collapse\" aria-labelledby={'heading'+movie.imdbID} data-bs-parent=\"#accordion\" >\n        <div className=\"accordion-body\">{detail.Plot}</div>\n      </div>\n    </div>\n  ) \n}\n\nexport default Movie;","import React, { useState } from \"react\";\n\nconst Search = (setMovies) => {\n  const [searchValue, setSearchValue] = useState(\"\");\n  \n  const sendValue = (e) => {\n    setMovies.getInputValue(e.target.value); \n  }\n\n  const resetInputField = () => {\n    setSearchValue(\"\");\n  }\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setMovies.getSubmit(searchValue);\n    resetInputField();    \n  }\n  \n  return (\n    <div className=\"searchContainer\">\n      <form className=\"search\">\n        <input\n          onChange={sendValue}\n          type=\"text\"\n          placeholder=\"Pirate\"\n          className=\"form-control\"\n        />\n        <input onClick={handleSubmit} type=\"submit\" value=\"SEARCH\" className=\"btn btn-primary\"/>      \n      </form>\n    </div>\n  );\n}\n\nexport default Search;","import React, { useState, useEffect } from \"react\";\nimport ReactPaginate from 'react-paginate';\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Movie from \"./Movie\";\nimport Search from \"./Search\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\n\nconst App = () => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [movie, setMovie] = useState({});\n  const [total, setTotal] = useState();\n  const [pages, setPages] = useState(1);\n  const [keyword, setKeyword] = useState('pirate');\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const getMovies = (term='', page= 1) => {\n    fetch(`https://www.omdbapi.com/?s=${term}&page=${page}&plot=full&apikey=d4f7bffb`)\n      .then(response => response.json())\n      .then(jsonResponse => {\n        setMovies(jsonResponse.Search);\n        setTotal(Math.ceil(jsonResponse.totalResults/10));\n        setPages(page);\n        setIsLoaded(true);\n        setErrorMessage(errorMessage);\n      })\n  }\n   \n  const getMovie = (movieId) => {\n    fetch(`https://www.omdbapi.com/?i=${movieId}&plot=full&apikey=d4f7bffb`)\n      .then(response => response.json())\n      .then(jsonResponse => {\n          setMovie(jsonResponse);\n          console.log(\"this is \" + jsonResponse)\n      })\n  }\n\n  const handlePageClick = e => {\n    console.log(\"selected\" + e.selected); //start from 0 wehre as pages starts from 1\n    getMovies(keyword, (e.selected + 1));\n   console.log(\"current page\" + pages ) // OFF!!!!\n  }\n\n  const handleCardClicked = movieId => {\n    console.log(movieId);\n    getMovie(movieId);  \n  }\n\n  useEffect(() => {\n    getMovies(keyword)\n  }, [keyword]);\n\n  const genCards = () => {\n    const allCards = [];\n    if(movies){\n      movies.map(movie => {\n        allCards.push(<Movie {...movie} cardClicked={handleCardClicked} />);\n      });\n    }\n    return allCards;\n  }\n  \n  const allCards = genCards();\n\n\n    return (\n     <div className=\"App\">\n      <Header text=\"Movie Database\" />\n      <div className=\"container-fluid\">\n      <div className=\"row\">\n          <Search \n            getInputValue={val => setKeyword(val)} \n            getSubmit={() => getMovies(keyword)\n            }\n          />\n        </div>\n        <div className=\"row\">\n          <div className=\"accordion accordion-flush\" id=\"accordion\" >\n            {/* {loading && !errorMessage ? (\n            <span>loading...</span>\n            ) : errorMessage ? (\n              <div className=\"errorMessage\">{errorMessage}</div>\n            ) : (\n              movies.map((movie, index) => (\n                <Movie key={`${index}-${movie.Title}`} movie={movie}/>\n                \n              ))\n            )} */}\n      \n            { !isLoaded ? (\n            <span>loading...</span>\n            ): \n            (allCards.length === 0 ? \n            <div className='error'>\n              No movie found...\n              <i className=\"far fa-grin-beam-sweat\"></i>\n            </div> : allCards) }\n        \n          </div>\n        </div>\n        <div className=\"row\">\n          <ReactPaginate \n            previousLabel={\"<\"}\n            previousClassName={\"page-item\"}\n            previousLinkClassName={\"page-link\"}\n            nextLabel={\">\"}\n            nextLinkClassName={\"page-link\"}\n            nextClassName={\"page-item\"}\n            breakLabel={\"...\"}\n            breakClassName={\"break-me\"}\n            pageCount={total}\n            marginPagesDisplayed={1}\n            pageRangeDisplayed={3}\n            onPageChange={handlePageClick}\n            forcePage={pages - 1}\n            containerClassName={\"pagination justify-content-center\"}\n            pageClassName={\"page-item\"}\n            pageLinkClassName={\"page-link\"}\n            subContainerClassName={\"pages pagination\"}\n            activeClassName={\"active\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}